PRACTICAL 3 - POS TAGGING

# Step 1: Import the necessary library
import spacy

# Step 2: Load the pre-trained model
# Load the small English model from spaCy (en_core_web_sm)
# This model can process text and assign POS tags to words
nlp = spacy.load("en_core_web_sm")

# Step 3: Define the text for POS tagging
# We will use a simple sentence as an example for demonstration
text = "The quick brown fox jumps over the lazy dog."

# Step 4: Process the text
# The text is passed through the spaCy NLP pipeline to process it.
# This will tokenize the sentence and assign linguistic annotations
# like part-of-speech tags, syntactic dependencies, and more.
doc = nlp(text)

# Step 5: Iterate through each token (word) in the processed document
# Each token has various properties, including its text and part-of-speech tag.
# We will print out the text (word) along with its POS tag.
print("POS Tagging Result:\n")
for token in doc:
    print(f"Word: {token.text} | POS Tag: {token.pos_}")

# Optional: Print the full sentence with detailed POS tagging for understanding
print("\nDetailed POS Tagging for each token:\n")
for token in doc:
    print(f"Token: {token.text}, POS Tag: {token.pos_}, Tag Description: {token.tag_}")

# Step 6: Additional Information (Optional)
# You can also print out additional information about the token such as:
# - token.dep_ (syntactic dependency)
# - token.lemma_ (base form of the word)
# - token.is_stop (whether the token is a stop word or not)

print("\nAdditional Information for Tokens:\n")
for token in doc:
    print(f"Token: {token.text}, Lemma: {token.lemma_}, Dependency: {token.dep_}, Is Stop Word: {token.is_stop}")
